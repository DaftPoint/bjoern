buildscript {
    ext{
        if (!project.hasProperty("ossrhUsername")) {
            ossrhUsername = ""
        }
        if (!project.hasProperty("ossrhPassword")) {
            ossrhPassword = ""
        }
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.kageiit:url-cache-plugin:1.0.0"
    }
}


allprojects{
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'com.kageiit.url-cache'


    repositories {
        jcenter()
    }
    compileJava.options.encoding = 'UTF-8'
}


subprojects {
    apply plugin: 'signing'
    apply plugin: 'maven'
    dependencies {
        implementation 'org.apache.commons:commons-lang3:3.7'
        implementation 'commons-io:commons-io:2.6'
        implementation 'org.apache.commons:commons-text:1.4'
        implementation 'org.slf4j:slf4j-simple:1.7.26'
        annotationProcessor 'org.projectlombok:lombok:1.18.8'
        compileOnly 'org.projectlombok:lombok:1.18.8'

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.assertj:assertj-core:3.10.0'
    }

    signing {
        sign configurations.archives
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    version = '1.1.0'
    group = "de.mehtrick"

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: " https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Bjoern Testing Framework'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'Simple bdd-java-framework for universal unit testing'
                    url 'https://github.com/Mehtrick/bjoern'

                    scm {
                        connection 'scm:git:https://github.com/Mehtrick/bjoern.git'
                        url 'https://github.com/Mehtrick/bjoern'
                    }

                    licenses {
                        license {
                            name 'MIT License'
                            url 'https://github.com/Mehtrick/bjoern/blob/master/LICENSE'
                        }
                    }

                    developers {
                        developer {
                            id 'mehtrick'
                            email 'p.lauhof@gmail.com'
                        }
                    }
                }
            }
        }
    }



}



