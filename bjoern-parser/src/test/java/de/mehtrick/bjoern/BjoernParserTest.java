package de.mehtrick.bjoern;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.fail;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;

import de.mehtrick.bjoern.parser.BjoernParser;
import de.mehtrick.bjoern.parser.modell.BDDKeyword;
import de.mehtrick.bjoern.parser.modell.Bjoern;
import de.mehtrick.bjoern.parser.modell.BjoernStatement;
import de.mehtrick.bjoern.parser.reader.BjoernFileExtensionInvalidException;
import de.mehtrick.bjoern.parser.reader.BjoernZGRReaderException;

public class BjoernParserTest {

	@Test
	public void testBjoernFullWithoutErrors() {
		String path = "src/test/resources/bjoern.zgr";
		Bjoern bjoern = BjoernParser.parseSpec(path);
		assertThat(bjoern.getFilePath()).isEqualTo(path);
		assertThat(bjoern.getFeature()).isEqualTo("Test eines Getraenkeautomaten");
		assertThat(bjoern.getScenarios()).hasSize(2);
	}

	@Test
	public void testWrongFileExctension() {
		try {
			BjoernParser.parseSpec("src/test/resources/bjoern.text");
			fail("Exception should have been thrown");
		} catch (BjoernFileExtensionInvalidException e) {
			assertThat(e.getMessage()).contains(BjoernFileExtensionInvalidException.MESSAGE);
		}
	}

	@Test
	public void testFileNotFound() {
		String path = "src/test/resources/notFound.zgr";
		try {
			BjoernParser.parseSpec(path);
			fail("Exception should have been thrown");
		} catch (BjoernZGRReaderException e) {
			assertThat(e.getMessage()).contains("No file found under the path " + path);
		}
	}

	@Test
	public void testBjoernStatementBuilder() {
		String string = "Hallo wie \"geht es dir\" du \"1\" stricher";
		BjoernStatement statement = new BjoernStatement(string, BDDKeyword.GIVEN);
		assertThat(statement.getPrimitiveStatement()).isEqualTo(string);
		assertThat(statement.getStatementWithoutParameters()).isEqualTo("given_HalloWieDuStricher");
		assertThat(statement.getParameters()).hasSize(2).contains("geht es dir", "1");
	}

}
